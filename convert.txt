#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "translate.h"

void verifyElement();

int main() {

    FILE *infile;
    FILE *temp;
    int pos=0;
    int lastElementPos=0;
    int ch;
    int elementStart=0;
    int quoteStart=0;
    /*char buffer[251];
    char *token;
*/

    infile = fopen("input.txt", "r");
    temp = fopen("temp.txt", "w");

    while ((ch = fgetc(infile)) != EOF) {
        if (ch=='.') {
            if (elementStart==1) {
                fprintf(temp, "%c", ch);
/*
                printf("%c", ch);
*/
            } else {
                elementStart=1;
                if (lastElementPos!=pos-1 && pos!=0) {
                    fprintf(temp, "\n");
                }
            }
        } else if (ch=='\n') {
            /*do nothing*/
            lastElementPos=pos;
        } else if (ch==')') {
            if (quoteStart==0) {
                elementStart=0;
                lastElementPos=pos;
/*
                printf("%c\n", ch);
*/
                fprintf(temp, "%c\n", ch);
            } else {
/*
                printf("%c", ch);
*/
                fprintf(temp, "%c", ch);
            }
        } else if (ch=='"') {
            if (quoteStart==0) {
                quoteStart=1;
            } else {
                quoteStart=0;
            }
        }else {
            fprintf(temp, "%c", ch);
/*
            printf("%c", ch);
*/
        }
        pos++;
    }

    fclose(infile);
    fclose(temp);

    verifyElement();    

    return 0;
}

void verifyElement() {

    FILE *temp;
    FILE *outfile;
    char buffer[251];

    int i=0;
    char elementLetter;
    char *token;
    int argNum;
    char **args;/*list of arguments for element*/
    char *cleanedBuffer;/*buffer without element letter and brackets*/

    cleanedBuffer = malloc(sizeof(char)*500);

    args = malloc(sizeof(char*)*10);
    for (i=0;i<5;i++) {
        args[i] = malloc(sizeof(char)*200);
    }

    temp = fopen("temp.txt", "r");
    outfile = fopen("outfile.txt", "w");

    fprintf(outfile, "<!doctype html>\n");
    fprintf(outfile, "<html>\n");
    fprintf(outfile, "<body>\n");

    fclose(outfile);

    while (fgets(buffer, 250, temp) != NULL) {

        if (feof(temp)) {
            break;
        }

        /*defaulting arguments values*/
        for (i=0;i<5;i++) {
            strcpy(args[i],"");
        }

        if (buffer[1]=='(') {

            elementLetter=buffer[0];

            strcpy(cleanedBuffer,&buffer[2]);
            cleanedBuffer[strlen(cleanedBuffer)-2]='\0';
/*
            printf("buffer: %s\n", cleanedBuffer);
*/
            if (strstr(cleanedBuffer,",")!=NULL) {
                token = strtok(cleanedBuffer,",");
                strcpy(args[0], token);
                i=1;
                while (token!=NULL) {
                    token=strtok(NULL,",");
                    if (token!=NULL) {
                        strcpy(args[i], token);
                        i++;
                    }
                }
            } else {
                strcpy(args[0], cleanedBuffer);
            }

            argNum=0;
            for (i=0;i<5;i++) {
                if (strcmp(args[i],"")!=0) {
                    argNum++;
                }
            }

            switch (elementLetter) {
                case 'b' :
                    buttonElement(args,argNum);
                    break;
                case 'd' :
                    drawElement();
                    break;
                case 'e' :
                    executableElement(args,argNum);
                    break;
                case 'h' :
                    headingElement(args, argNum);
                    break;
                case 'i' :
                    inputElement(args,argNum);
                    break;
                case 'l' :
                    linkElement(args,argNum);
                    break;
                case 'p' :
                    pictureElement(args,argNum);
                    break;
                case 'r' :
                    radioElement(args,argNum);
                    break;
                case 't' :
                    textElement(args,argNum);
                    break;
                default :
                    printf("%s\n", buffer);
                    break;
            }
        } else {
            printf("%s\n", buffer);
        }
    }

    outfile = fopen("outfile.txt", "a");

    fprintf(outfile, "</body>\n");
    fprintf(outfile, "</html>\n");

    fclose(temp);
    fclose(outfile);

    free(cleanedBuffer);

    for (i=0;i<5;i++) {
        free(args[i]);
    }
    free(args);


}
